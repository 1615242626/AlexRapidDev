@using System.Collections
@using System.ComponentModel.DataAnnotations
@using System.Data.Entity
@using System.Reflection
@using ALEXFW.CommonUtility
@using ALEXFW.Entity.CommonDictionary
@model IEntityEditModel
@{
    ViewBag.Title = Model.Metadata.Name + " Detail";
    var area = ViewContext.RouteData.DataTokens["Area"];
    if (area == null)
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    else
    {
        Layout = "~/Areas/" + area + "/Views/Shared/_adminLayout.cshtml";
    }
}
<ol class="breadcrumb"  style ="background-color:white">
    <li>
        <a href="@Html.Raw(Url.Action("Index", "Home"))">Home</a>
    </li>
    <li>
        <a href="@Html.Raw(Url.Action("Index"))">@Model.Metadata.Name</a>
    </li>
    <li class="active">Detail</li>
</ol>
<div class="panel panel-default  margin-10">
    <!-- Default panel contents -->
    <div class="panel-heading">
        <strong class="font-size20">明细</strong>
    </div>
    <div class="panel-body">
        <form id="form" class="form-horizontal" role="form">
            @foreach (var property in Model.Properties)
            {
                <div class="form-group">
                    <label class="col-sm-2 control-label">@property.Name</label>
                    <div class="col-sm-8">
                        @{

                            var entityType = ((EntitySelectAttribute) property.TryGetPropertyInfo().GetCustomAttribute(typeof (EntitySelectAttribute), false))?.EntityType;
                            var dataContext = new ALEXFW.DataAccess.DBContext();
                            if (entityType != null)
                            {
                                if (property.CustomType == "EntityID")
                                {
                                    var eValue = property.GetValue(Model.Item).ToString();
                                    var gid = Guid.Parse(eValue) == Guid.Empty ? Guid.NewGuid() : Guid.Parse(eValue);
                                    dynamic entity = dataContext.Set(entityType).Find(gid);
                                    var display = entityType.GetCustomAttribute(typeof(DisplayColumnAttribute), false) as DisplayColumnAttribute;
                                    if (display != null && entity != null)
                                    {
                                        var propertyInfo = entityType.GetProperty(display.DisplayColumn);
                                        eValue = !(propertyInfo.GetValue(entity) is string) ? eValue : propertyInfo.GetValue(entity);
                                    }

                                    <p class="form-control-static">@eValue</p>
                                }
                                if (property.CustomType == "MultiEntityColle")
                                {
                                    var eValue = ((IEnumerable) property.GetValue(Model.Item)).Cast<IEntity>().ToArray();
                                    foreach (var id in eValue)
                                    {
                                        <p class="form-control-static">@id</p>
                                    }
                                }
                            }
                            else
                            {
                                if (property.CustomType == "Ck")
                                {
                                    <p class="form-control-static">@Html.Raw(EntityValueConverter.GetConverter(property).ConvertToString(property.GetValue(Model.Item)))</p>
                                }
                                else if (property.GetValue(Model.Item) == null)
                                {
                                    <p> @EntityValueConverter.GetConverter(property).ConvertToString(property.GetValue(Model.Item))</p>
                                }
                                if (property.CustomType == "SingleImage")
                                {
                                    <p class="form-control-static">
                                        <img src="@EntityValueConverter.GetConverter(property).ConvertToString(property.GetValue(Model.Item))" alt="图片未能显示">
                                    </p>
                                }
                                else if (property.GetValue(Model.Item) == null)
                                {
                                    <p class="form-control-static">@EntityValueConverter.GetConverter(property).ConvertToString(property.GetValue(Model.Item))</p>
                                }
                                if (property.CustomType == "MultiImage")
                                {
                                    if (EntityValueConverter.GetConverter(property).ConvertToString(property.GetValue(Model.Item)) != null)
                                    {
                                        var imgArray = (EntityValueConverter.GetConverter(property).ConvertToString(property.GetValue(Model.Item))).Split(',');
                                        
                                        foreach (string item in imgArray)
                                        {
                                            if (!string.IsNullOrEmpty(item))
                                            {
                                                <p class="form-control-static">
                                                    <img src="@ImageHelper.ImageWebsite@item" alt="图片未能显示">
                                                </p>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <p class="form-control-static">@EntityValueConverter.GetConverter(property).ConvertToString(property.GetValue(Model.Item))</p>
                                    }
                                }
                                else if (property.GetValue(Model.Item) == null)
                                {
                                    <p class="form-control-static">@EntityValueConverter.GetConverter(property).ConvertToString(property.GetValue(Model.Item))</p>
                                }
                                else if (property.GetValue(Model.Item).ToString() == "True")
                                {
                                    if (property.Type == CustomDataType.Sex)
                                    {
                                        <p class="form-control-static">男</p>
                                    }
                                    else
                                    {
                                        <p class="form-control-static">是</p>
                                    }
                                }
                                else if (property.GetValue(Model.Item).ToString() == "False")
                                {
                                    if (property.Type == CustomDataType.Sex)
                                    {
                                        <p class="form-control-static">女</p>
                                    }
                                    else
                                    {
                                        <p class="form-control-static">否</p>
                                    }
                                }
                                else if (property.Type == CustomDataType.Image)
                                {
                                    <p class="form-control-static"><img src="@EntityValueConverter.GetConverter(property).ConvertToString(property.GetValue(Model.Item))" alt="图片未能显示">
                                    </p>
                                }
                                else
                                {
                                    <p class="form-control-static">@EntityValueConverter.GetConverter(property).ConvertToString(property.GetValue(Model.Item))</p>
                                }
                            }
                        }
                    </div>
                </div>
            }
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <a href="@Html.Raw(Url.Action("Index"))" class="btn btn-default">返回</a>
                </div>
            </div>
        </form>
    </div>
</div>